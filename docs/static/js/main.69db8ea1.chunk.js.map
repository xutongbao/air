{"version":3,"sources":["router/Router.js","reportWebVitals.js","index.js","store/light/light.js","store/index.js"],"names":["Index","lazy","Admin","FormView","Cards","CardPlus","Router","fallback","from","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","locale","zhCN","document","getElementById","defaultState","fromJS","router","reducer","state","action","type","setIn","key","value","reducers","combineReducers","light","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore"],"mappings":"2LAEMA,EAAQC,gBAAK,kBAAM,+DACnBC,EAAQD,gBAAK,kBAAM,wDACnBE,EAAWF,gBAAK,kBAAM,8EACtBG,EAAQH,gBAAK,kBAAM,wDACnBI,EAAWJ,gBAAK,kBAAM,wDAIb,SAASK,IACtB,OACE,mCACE,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,KAAK,IAAIC,GAAG,4BAA4BC,OAAK,IACvD,cAAC,IAAD,CAAOC,KAAK,eAAeC,UAAWZ,IACtC,cAAC,IAAD,CAAOW,KAAK,eAAeC,UAAWV,IACtC,cAAC,IAAD,CAAOS,KAAK,kBAAkBC,UAAWT,IACzC,cAAC,IAAD,CAAOQ,KAAK,eAAeC,UAAWR,IACtC,cAAC,IAAD,CAAOO,KAAK,kBAAkBC,UAAWP,W,6BCRpCQ,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCIdQ,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,IAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAgBC,OAAQC,IAAxB,SACE,cAACpB,EAAD,UAINqB,SAASC,eAAe,SAM1Bf,K,oECvBMgB,EAAeC,iBAAO,CAC1BC,OAAQ,KAYKC,EATC,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOF,EAAMG,MAAMF,EAAOG,IAAKP,iBAAOI,EAAOI,QAC/C,QACE,OAAOL,ICNPM,EAAWC,0BAAgB,CAC/BC,UAWIC,GANc,kBAAXC,QAAuBA,OAAOC,qCACjCD,OAAOC,qCAAqC,IAG5CC,KAGJC,YAAgBC,MAIZvB,EAAQwB,YAAYT,EAAUG,GAOrBlB,Q","file":"static/js/main.69db8ea1.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nconst Index = lazy(() => import('../views/light/index/Index'))\r\nconst Admin = lazy(() => import('../views/light/admin/Admin'))\r\nconst FormView = lazy(() => import('../views/light/formview/Index'))\r\nconst Cards = lazy(() => import('../views/light/test/Cards'))\r\nconst CardPlus = lazy(() => import('../views/light/test/CardPlus'))\r\n\r\n\r\n\r\nexport default function Router() {\r\n  return (\r\n    <>\r\n      <Suspense fallback={null}>\r\n        <Switch>\r\n          <Redirect from=\"/\" to=\"/light/index/content?id=0\" exact></Redirect>\r\n          <Route path=\"/light/index\" component={Index}></Route>\r\n          <Route path=\"/light/admin\" component={Admin}></Route>\r\n          <Route path=\"/light/formview\" component={FormView}></Route>\r\n          <Route path=\"/light/cards\" component={Cards}></Route>\r\n          <Route path=\"/light/cardPlus\" component={CardPlus}></Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport store from './store'\nimport Router from './router/Router'\nimport { ConfigProvider } from 'antd'\nimport zhCN from 'antd/lib/locale/zh_CN'\nimport './static/css/light.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <ConfigProvider locale={zhCN}>\n        <Router></Router>\n      </ConfigProvider>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { fromJS } from 'immutable'\r\n\r\nconst defaultState = fromJS({\r\n  router: [],\r\n})\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LIGHT_STATE':\r\n      return state.setIn(action.key, fromJS(action.value))\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux-immutable'\r\nimport light from './light/light'\r\n\r\nconst reducers = combineReducers({\r\n  light\r\n})\r\n\r\n//chrome插件：Redux DevTools 配置，参考链接： https://github.com/zalmoxisus/redux-devtools-extension\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n  // other store enhancers if any\r\n)\r\n\r\nconst store = createStore(reducers, enhancer)\r\n\r\n// store.subscribe(() => {\r\n//   let state = store.getState().toJS()\r\n//   console.log(state)\r\n// })\r\n\r\nexport default store"],"sourceRoot":""}