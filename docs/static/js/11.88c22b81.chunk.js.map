{"version":3,"sources":["utils/tools.js","utils/config.js","components/light/Icon.js","components/light/MyTable.js","components/light/MyTableForEasy.js","components/light/FieldRequired.js","components/light/UploadImgLight.js","api/urls.js","api/lightUrls.js","api/common.js","api/index.js","api/lightApi.js","views/light/admin/setApplication/Tool.js","views/light/admin/setApplication/config.js","views/light/admin/setApplication/Header.js","views/light/admin/setApplication/useList.js","views/light/admin/setApplication/Index.js"],"names":["TextArea","Input","getRouterSearchObj","props","url","params","arr","split","length","i","l","a","parseQueryString","location","search","getHost","result","exec","getFormComponentArr","id","title","formComponentName","component","getComponent","style","width","alt","getRenderFunArr","renderFunName","formComponentNameArr","render","text","moment","format","src","baseURL","Icon","name","className","onClick","MyTable","dataSource","total","current","pageSize","getColumns","columns","rowKey","scroll","scrollToFirstRowOnChange","x","rowSelection","onChange","selectedRowKeys","selectedRows","onRowSelect","pagination","page","onSearch","showSizeChanger","pageSizeOptions","onShowSizeChange","showTotal","MyTableForEasy","FieldRequired","value","useState","required","setRequired","message","setMessage","triggerChange","changedValue","checked","tempMessage","e","target","placeholder","UploadImgLight","msg","accept","defaultValue","uid","status","fileList","push","uploadProps","action","urls","light","testUpload","maxCount","listType","defaultFileList","info","file","success","response","state","temp","console","log","imgUrl","xhr","responseURL","data","filename","error","templateSearch","templateAdd","templateDelete","templateEdit","easyTemplateSearch","easyTemplateAdd","easyTemplateDelete","easyTemplateEdit","routerSearch","routerAdd","routerDelete","routerEdit","tableSearch","tableAdd","tableDelete","tableEdit","fieldsSearch","fieldsAdd","fieldsDelete","fieldsEdit","fieldsEditAll","axios","defaults","interceptors","request","use","config","headers","token","localStorage","getItem","method","err","Promise","reject","res","code","warning","common","Api","Tool","onAdd","type","Option","Select","dataIndex","Array","isArray","record","isSystem","size","danger","onDelete","onCheck","onEdit","getModalFields","initValues","Item","label","rules","validator","_","resolve","find","item","Error","getPopupContainer","document","getElementById","map","filter","includes","valuePropName","min","max","withRouter","applicationTitle","history","go","confirm","Modal","connect","dispatch","onSetState","key","onDispatch","setDataSource","Form","useForm","form","isModalVisible","setIsModalVisible","setInitValues","setType","setApplicationTitle","modalTitle","setModalTitle","setFormComponentName","tableId","addInitValues","handleSearch","then","fields","useEffect","resetFields","handleDelete","onOk","ids","handleAdd","handleEdit","handleCheck","handleFinish","values","dataItem","handleFinishFailed","errorInfo","handleValuesChange","changedValues","allValues","useList","visible","onCancel","footer","forceRender","labelCol","span","wrapperCol","initialValues","scrollToFirstError","onFinish","onFinishFailed","onValuesChange","offset","htmlType"],"mappings":"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","file":"static/js/11.88c22b81.chunk.js","sourcesContent":["import store from '../store'\r\nimport { Input, InputNumber } from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input\r\n\r\nlet timer\r\n\r\n//显示loading\r\nconst showLoading = (delay = 0) => {\r\n  timer = setTimeout(() => {\r\n    store.dispatch({\r\n      type: 'SET_LIGHT_STATE',\r\n      key: ['isLoading'],\r\n      value: true,\r\n    })\r\n  }, delay)\r\n}\r\n\r\n//隐藏loading\r\nconst hideLoading = () => {\r\n  clearTimeout(timer)\r\n  store.dispatch({\r\n    type: 'SET_LIGHT_STATE',\r\n    key: ['isLoading'],\r\n    value: false,\r\n  })\r\n}\r\n\r\n//把url里的查询字段转换成对象\r\nconst parseQueryString = (url) => {\r\n  let params = {}\r\n  let arr = url.split('?')\r\n  if (arr.length <= 1) {\r\n    return params\r\n  }\r\n  arr = arr[1].split('&')\r\n  for (let i = 0, l = arr.length; i < l; i++) {\r\n    let a = arr[i].split('=')\r\n    params[a[0]] = a[1]\r\n  }\r\n  return params\r\n}\r\n\r\n//包路由里的查询字段转换成对象\r\nconst getRouterSearchObj = (props) => {\r\n  const {\r\n    location: { search },\r\n  } = props\r\n  const routerSearchObj = parseQueryString(search)\r\n  return routerSearchObj\r\n}\r\n\r\n//获取主机名\r\nconst getHost = (url) => {\r\n  var reg = /http(s)?:\\/\\/([A-Za-z0123456789:.-]+)\\/\\S+/\r\n  var result = reg.exec(url)\r\n  if (result) {\r\n    return 'http://' + result[2]\r\n  }\r\n}\r\n\r\n//获取表单组件\r\nconst getFormComponentArr = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      title: '单行文本',\r\n      formComponentName: 'Input',\r\n      component: <Input></Input>,\r\n      getComponent: ({props}) => {\r\n        return <Input {...props}></Input>\r\n      }\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '多行文本',\r\n      formComponentName: 'TextArea',\r\n      component: <TextArea></TextArea>,\r\n      getComponent: ({props}) => {\r\n        return <TextArea {...props}></TextArea>\r\n      }\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '数字',\r\n      formComponentName: 'InputNumber',\r\n      component: <InputNumber style={{width: '100%'}}></InputNumber>,\r\n      getComponent: ({props}) => {\r\n        return <InputNumber style={{width: '100%'}} {...props}></InputNumber>\r\n      }\r\n    },\r\n    {\r\n      id: 4,\r\n      title: '图片',\r\n      formComponentName: 'Image',\r\n      component: <img style={{width: '100%'}} alt=\"图片\"></img>,\r\n      getComponent: ({props}) => {\r\n        return <img style={{width: '100%'}}  {...props} alt=\"图片\"></img>\r\n      }\r\n    },\r\n  ]\r\n}\r\n\r\n//获取渲染函数\r\nconst getRenderFunArr = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      title: 'span标签',\r\n      renderFunName: 'renderSpan',\r\n      formComponentNameArr: ['Input', 'TextArea'],\r\n      render: (text) => {\r\n        return <span>{text}</span>\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '日期',\r\n      renderFunName: 'renderDatetime',\r\n      formComponentNameArr: [],\r\n      render: (text) => {\r\n        return <span>{text ? moment(text).format('YYYY-MM-DD HH:mm:ss') : ''}</span>\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '图片',\r\n      renderFunName: 'renderImage',\r\n      formComponentNameArr: ['Image'],\r\n      render: (text) => {\r\n        return <img alt=\"图片\" src={text}></img>\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\nexport {\r\n  showLoading,\r\n  hideLoading,\r\n  parseQueryString,\r\n  getRouterSearchObj,\r\n  getHost,\r\n  getFormComponentArr,\r\n  getRenderFunArr,\r\n}\r\n","let baseURL = 'http://localhost:81'\r\nif (process.env.NODE_ENV === 'development') {\r\n  baseURL = 'http://localhost:81' //\"http://localhost:81\"\r\n} else {\r\n  baseURL = 'https://efficacious-tiny-infinity.glitch.me'\r\n}\r\n\r\nexport { baseURL }","import React from \"react\"\r\n\r\nexport default function Icon(props) {\r\n  let { name, className, title } = props\r\n  return (\r\n    <span\r\n      className={`icon iconfont icon-${name} ${className ? className : \"\"}`}\r\n      title={title}\r\n      onClick={props.onClick}\r\n    ></span>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTable(props) {\r\n  const { dataSource, total, current, pageSize, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        rowSelection={{\r\n          onChange: (selectedRowKeys, selectedRows) =>\r\n            props.onRowSelect(selectedRowKeys, selectedRows),\r\n        }}\r\n        pagination={{\r\n          current,\r\n          total,\r\n          pageSize,\r\n          onChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showSizeChanger: true,\r\n          pageSizeOptions: [10, 20, 50],\r\n          onShowSizeChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTable\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTableForEasy(props) {\r\n  const { dataSource, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        pagination={{\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n        //pagination={false}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTableForEasy\r\n","import React, { useState } from 'react'\r\nimport { Checkbox, Input } from 'antd'\r\n\r\nexport default function FieldRequired({ value = {}, onChange }) {\r\n  const [required, setRequired] = useState(false) \r\n  const [message, setMessage] = useState()\r\n\r\n  const triggerChange = (changedValue) => {\r\n    onChange({\r\n      required,\r\n      message,\r\n      ...value,\r\n      ...changedValue,\r\n    });\r\n  };\r\n\r\n\r\n  const handleCheckbox = (e) => {\r\n    setRequired(e.target.checked)\r\n    triggerChange({ required: e.target.checked })\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    setMessage(e.target.value)\r\n    triggerChange({ message: e.target.value })\r\n  }\r\n\r\n  let checked = false\r\n  let tempMessage = ''\r\n  if (value && typeof value.required === 'boolean') {\r\n    checked = value.required\r\n    tempMessage = value.message\r\n  } else {\r\n    checked = required\r\n    tempMessage = message\r\n  }\r\n  return (\r\n    <div>\r\n      <Checkbox checked={checked} onChange={handleCheckbox}>必填</Checkbox>\r\n      <Input className={`m-fields-required-input ${checked ? 'active' : ''}`} value={tempMessage} onChange={handleInput} placeholder=\"请输入必填提示语\"></Input>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, Upload, message } from 'antd'\r\nimport urls from '../../api/urls'\r\nimport { getHost } from '../../utils/tools'\r\n\r\nexport default function UploadImgLight({\r\n  value = '',\r\n  msg,\r\n  onChange,\r\n  accept = '.jpg',\r\n}) {\r\n  const imageUrl = value\r\n  let defaultValue = {\r\n    uid: '-1',\r\n    name: imageUrl,\r\n    status: 'done',\r\n    url: imageUrl,\r\n  }\r\n\r\n  const fileList = []\r\n  if (value) {\r\n    fileList.push(defaultValue)\r\n  }\r\n\r\n  const uploadProps = {\r\n    name: 'file',\r\n    action: urls.light.testUpload,\r\n    maxCount: 1,\r\n    listType: 'picture',\r\n    defaultFileList: [...fileList],\r\n    accept,\r\n    onChange(info) {\r\n      // if (info.file.status !== 'uploading') {\r\n      //   console.log(info.file, info.fileList)\r\n      //   onChange(undefined)\r\n      // }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} 上传成功`)\r\n        if (info.file.response.state === 1) {\r\n          // console.log(info.file.xhr.responseURL)\r\n          const temp = getHost('https://efficacious-tiny-infinity.glitch.me/api/upload')\r\n          console.log(temp)\r\n          const imgUrl = `${getHost(info.file.xhr.responseURL)}/${info.file.response.data.filename}`\r\n          console.log(imgUrl)\r\n          onChange(imgUrl)\r\n        }\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} 上传失败`)\r\n      }\r\n    },\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <Upload {...uploadProps}>\r\n        <Button>上传图片</Button>\r\n        <span className=\"m-upload-text\">{msg}</span>\r\n      </Upload>\r\n    </span>\r\n  )\r\n}\r\n","import light from \"./lightUrls\"\r\n\r\nconst urls = {\r\n  light,\r\n}\r\n\r\nexport default urls\r\n","import { baseURL } from '../utils/config'\r\n\r\nconst urls = {\r\n  testUpload: baseURL + '/api/upload', //不是axios发起的请求，需要特殊处\r\n\r\n  templateSearch: '/api/template/search',\r\n  templateAdd: '/api/template/add',\r\n  templateDelete: '/api/template/delete',\r\n  templateEdit: '/api/template/edit',\r\n  easyTemplateSearch: '/api/easyTemplate/search',\r\n  easyTemplateAdd: '/api/easyTemplate/add',\r\n  easyTemplateDelete: '/api/easyTemplate/delete',\r\n  easyTemplateEdit: '/api/easyTemplate/edit',  \r\n  routerSearch: '/api/router/search',\r\n  routerAdd: '/api/router/add',\r\n  routerDelete: '/api/router/delete',\r\n  routerEdit: '/api/router/edit',\r\n  tableSearch: '/api/table/search',\r\n  tableAdd: '/api/table/add',\r\n  tableDelete: '/api/table/delete',\r\n  tableEdit: '/api/table/edit',\r\n  fieldsSearch: '/api/fields/search',\r\n  fieldsAdd: '/api/fields/add',\r\n  fieldsDelete: '/api/fields/delete',\r\n  fieldsEdit: '/api/fields/edit',\r\n  fieldsEditAll: '/api/fields/editAll',\r\n}\r\n\r\nexport default urls","import axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { baseURL  } from '../utils/config'\r\n\r\naxios.defaults.baseURL = baseURL\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    config.headers.token = localStorage.getItem('token') || ''\r\n\r\n    // if (config.isNeedExtraData !== false) {\r\n    //   let extraData = { userId: 1 }\r\n    //   if (config.method === \"get\") {\r\n    //     config.params = { ...extraData, ...config.data }\r\n    //   } else {\r\n    //     config.data = { ...extraData, ...config.data }\r\n    //   }\r\n    // }\r\n    if (config.method === 'get') {\r\n      config.params = { ...config.data }\r\n    } else {\r\n      config.data = { ...config.data }\r\n    }\r\n    return config\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\naxios.interceptors.response.use((res) => {\r\n  if (res.data.code === 200) {\r\n    return res.data\r\n  } else if (res.data.code === 400) {\r\n    message.warning(res.data.message)\r\n    return res.data\r\n  } else {\r\n    return Promise.reject(res)\r\n  }\r\n})\r\n\r\nexport const common = async (config) => {\r\n  let res = await axios(config)\r\n  return res\r\n}\r\n","import light from './lightApi'\r\n\r\nconst Api = {\r\n  light\r\n}\r\n\r\nexport default Api\r\n\r\n\r\n\r\n","import urls from './urls'\r\nimport { common } from './common'\r\n\r\nconst Api = {\r\n  templateSearch: (data) => common({ url: urls.light.templateSearch, data, method: 'post' }),\r\n  templateAdd: (data) => common({ url: urls.light.templateAdd, data, method: 'post' }),\r\n  templateDelete: (data) => common({ url: urls.light.templateDelete, data, method: 'post' }),\r\n  templateEdit: (data) => common({ url: urls.light.templateEdit, data, method: 'post' }),\r\n  easyTemplateSearch: (data) => common({ url: urls.light.easyTemplateSearch, data, method: 'post' }),\r\n  easyTemplateAdd: (data) => common({ url: urls.light.easyTemplateAdd, data, method: 'post' }),\r\n  easyTemplateDelete: (data) => common({ url: urls.light.easyTemplateDelete, data, method: 'post' }),\r\n  easyTemplateEdit: (data) => common({ url: urls.light.easyTemplateEdit, data, method: 'post' }),\r\n  routerSearch: (data) => common({ url: urls.light.routerSearch, data, method: 'post' }),\r\n  routerAdd: (data) => common({ url: urls.light.routerAdd, data, method: 'post' }),\r\n  routerDelete: (data) => common({ url: urls.light.routerDelete, data, method: 'post' }),\r\n  routerEdit: (data) => common({ url: urls.light.routerEdit, data, method: 'post' }),\r\n  tableSearch: (data) => common({ url: urls.light.tableSearch, data, method: 'post' }),\r\n  tableAdd: (data) => common({ url: urls.light.tableAdd, data, method: 'post' }),\r\n  tableDelete: (data) => common({ url: urls.light.tableDelete, data, method: 'post' }),\r\n  tableEdit: (data) => common({ url: urls.light.tableEdit, data, method: 'post' }),\r\n  fieldsSearch: (data) => common({ url: urls.light.fieldsSearch, data, method: 'post' }),\r\n  fieldsAdd: (data) => common({ url: urls.light.fieldsAdd, data, method: 'post' }),\r\n  fieldsDelete: (data) => common({ url: urls.light.fieldsDelete, data, method: 'post' }),\r\n  fieldsEdit: (data) => common({ url: urls.light.fieldsEdit, data, method: 'post' }),\r\n  fieldsEditAll: (data) => common({ url: urls.light.fieldsEditAll, data, method: 'post' }),\r\n}\r\n\r\nexport default Api","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Icon } from '../../../../components/light'\r\n\r\nfunction Tool(props) {\r\n  const { onAdd } = props\r\n\r\n  return (\r\n    <div className=\"m-content-tool\">\r\n      <div className=\"m-content-tool-row\">\r\n        <Button className=\"m-space\" type=\"primary\" onClick={onAdd}>\r\n          <Icon name=\"add\" className=\"m-tool-btn-icon\"></Icon>\r\n          添加字段\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tool\r\n","import { Form, Input, Button, Select, InputNumber, Checkbox } from 'antd'\r\nimport { getFormComponentArr, getRenderFunArr } from '../../../../utils/tools'\r\nimport { FieldRequired } from '../../../../components/light'\r\n\r\nconst { Option } = Select\r\n\r\n//表格列字段\r\nconst getColumns = (props) => {\r\n  return [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n    },\r\n    {\r\n      title: '字段名称',\r\n      dataIndex: 'title',\r\n    },\r\n    {\r\n      title: '英文名称',\r\n      dataIndex: 'dataIndex',\r\n    },\r\n    {\r\n      title: '表单组件名',\r\n      dataIndex: 'formComponentName',\r\n      render: (text) => {\r\n        return text ? text : '无'\r\n      },\r\n    },\r\n    {\r\n      title: '渲染函数名',\r\n      dataIndex: 'renderFunName',\r\n      render: (text) => {\r\n        return text ? text : '无'\r\n      },\r\n    },\r\n    {\r\n      title: '字段必填',\r\n      dataIndex: 'rules',\r\n      render: (text) => {\r\n        const result = Array.isArray(text) && text.length > 0 && text[0]\r\n        return result ? (result.required ? '是' : '否') : '否'\r\n      },\r\n    },\r\n    {\r\n      title: '表格展示',\r\n      dataIndex: 'isColumn',\r\n      render: (text) => {\r\n        return text ? '是' : '否'\r\n      },\r\n    },\r\n    // {\r\n    //   title: '搜索',\r\n    //   dataIndex: 'isSearch',\r\n    //   render: (text) => {\r\n    //     return text ? '是' : '否'\r\n    //   },\r\n    // },\r\n    {\r\n      title: '添加/编辑',\r\n      dataIndex: 'isModalField',\r\n      render: (text) => {\r\n        return text ? '是' : '否'\r\n      },\r\n    },\r\n    {\r\n      title: '顺序号',\r\n      dataIndex: 'orderIndex',\r\n      render: (text) => {\r\n        return typeof text === 'number' ? text : '无'\r\n      },\r\n    },\r\n    {\r\n      title: '操作',\r\n      width: 220,\r\n      render: (record) => {\r\n        if (record.isSystem) {\r\n          return '系统字段'\r\n        } else {\r\n          return (\r\n            <div className=\"m-action\">\r\n              <Button\r\n                className=\"m-action-btn\"\r\n                size=\"small\"\r\n                danger\r\n                onClick={() => props.onDelete(record)}\r\n              >\r\n                删除\r\n              </Button>\r\n              <Button\r\n                className=\"m-action-btn\"\r\n                size=\"small\"\r\n                onClick={() => props.onCheck(record)}\r\n              >\r\n                查看\r\n              </Button>\r\n              <Button\r\n                className=\"m-action-btn\"\r\n                size=\"small\"\r\n                onClick={() => props.onEdit(record)}\r\n              >\r\n                编辑\r\n              </Button>\r\n            </div>\r\n          )\r\n        }\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\n//添加编辑查看对话框表单字段\r\nconst getModalFields = ({\r\n  dataSource,\r\n  type,\r\n  initValues,\r\n  formComponentName,\r\n}) => {\r\n  const checkTitle = (_, value) => {\r\n    if (type === 'edit') {\r\n      if (value === initValues.title) {\r\n        return Promise.resolve()\r\n      }\r\n    }\r\n    const result = dataSource.find((item) => item.title === value)\r\n    if (result) {\r\n      return Promise.reject(new Error('字段名称已存在!'))\r\n    } else {\r\n      return Promise.resolve()\r\n    }\r\n  }\r\n\r\n  const checkDataIndex = (_, value) => {\r\n    if (type === 'edit') {\r\n      if (value === initValues.dataIndex) {\r\n        return Promise.resolve()\r\n      }\r\n    }\r\n    const result = dataSource.find((item) => item.dataIndex === value)\r\n    if (result) {\r\n      return Promise.reject(new Error('英文字段名称已存在!'))\r\n    } else {\r\n      return Promise.resolve()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        label=\"字段名称\"\r\n        name=\"title\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入字段名称！',\r\n          },\r\n          {\r\n            validator: checkTitle,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"英文名称\"\r\n        name=\"dataIndex\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入字段名称！',\r\n          },\r\n          {\r\n            validator: checkDataIndex,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"表单组件\"\r\n        name=\"formComponentName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择表单组件！',\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder=\"请选择\"\r\n          getPopupContainer={() =>\r\n            document.getElementById('m-set-application-modal-form')\r\n          }\r\n        >\r\n          {getFormComponentArr().map((item) => (\r\n            <Option key={item.id} value={item.formComponentName}>\r\n              {item.title}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"渲染函数名\"\r\n        name=\"renderFunName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请选择表渲染函数名！',\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder=\"请选择\"\r\n          getPopupContainer={() =>\r\n            document.getElementById('m-set-application-modal-form')\r\n          }\r\n        >\r\n          {getRenderFunArr()\r\n            .filter((item) =>\r\n              item.formComponentNameArr.includes(formComponentName)\r\n            )\r\n            .map((item) => (\r\n              <Option key={item.id} value={item.renderFunName}>\r\n                {item.title}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item label=\"字段必填\" name=\"rules\">\r\n        <FieldRequired></FieldRequired>\r\n      </Form.Item>\r\n      <Form.Item label=\"表格展示\" name=\"isColumn\" valuePropName=\"checked\">\r\n        <Checkbox>展示</Checkbox>\r\n      </Form.Item>\r\n      {/* <Form.Item\r\n        label=\"搜索\"\r\n        name=\"isSearch\"\r\n        valuePropName=\"checked\"\r\n      >\r\n        <Checkbox>展示</Checkbox>\r\n      </Form.Item> */}\r\n      <Form.Item label=\"添加/编辑\" name=\"isModalField\" valuePropName=\"checked\">\r\n        <Checkbox>展示</Checkbox>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"顺序号\"\r\n        name=\"orderIndex\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入顺序号！',\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber min={1} max={100} />\r\n      </Form.Item>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { getColumns, getModalFields }\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Icon } from '../../../../components/light'\r\n\r\nfunction Header(props) {\r\n  const { applicationTitle } = props\r\n  return (\r\n    <div className=\"m-set-application-header\">\r\n      <Icon\r\n        name=\"goback\"\r\n        title=\"返回\"\r\n        className=\"m-set-application-header-icon\"\r\n        onClick={() => props.history.go(-1)}\r\n      ></Icon>\r\n      <span title={applicationTitle}>{applicationTitle}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import { useState, useEffect } from 'react'\r\nimport Api from '../../../../api'\r\nimport { Modal, Form } from 'antd'\r\nimport { getRouterSearchObj } from '../../../../utils/tools'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default function useList(props) {\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [form] = Form.useForm()\r\n  //控制对话框显示和隐藏\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  //添加表单默认值\r\n  const [initValues, setInitValues] = useState({})\r\n  const [type, setType] = useState('add')\r\n  const [applicationTitle, setApplicationTitle] = useState()\r\n  const [modalTitle, setModalTitle] = useState()\r\n  const [formComponentName, setFormComponentName] = useState()\r\n\r\n  //获取路由参数\r\n  const routerSearchObj = getRouterSearchObj(props)\r\n  const tableId = routerSearchObj.id - 0\r\n\r\n  const addInitValues = {\r\n    // rules: {\r\n    //   required: true,\r\n    //   message: '',\r\n    // }\r\n  }\r\n\r\n  //搜索\r\n  const handleSearch = () => {\r\n    Api.light.fieldsSearch({ tableId }).then((res) => {\r\n      if (res.code === 200) {\r\n        setDataSource(res.data.fields)\r\n        setApplicationTitle(res.data.title)\r\n      }\r\n    })\r\n  }\r\n\r\n  //删除\r\n  const handleDelete = (record) => {\r\n    console.log('删除, id:', record.id)\r\n    confirm({\r\n      title: '确认要删除吗？',\r\n      onOk() {\r\n        Api.light.fieldsDelete({ tableId, ids: [record.id] }).then((res) => {\r\n          if (res.code === 200) {\r\n            handleSearch()\r\n          }\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  //显示添加对话框\r\n  const handleAdd = () => {\r\n    setType('add')\r\n    setInitValues(addInitValues)\r\n    console.log(addInitValues)\r\n    setModalTitle('添加字段')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //显示编辑对话框\r\n  const handleEdit = (record) => {\r\n    console.log('编辑, id:', record)\r\n    setType('edit')\r\n    record.rules = Array.isArray(record.rules) ? record.rules[0] : {}\r\n    setInitValues({ ...initValues, ...record })\r\n    setModalTitle('编辑字段')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //添加或编辑\r\n  const handleFinish = (values) => {\r\n    console.log('Success:', values)\r\n    values.rules = Array.isArray(values.rules) ? values.rules : [values.rules]\r\n    if (type === 'add') {\r\n      Api.light.fieldsAdd({ tableId, dataItem: values }).then((res) => {\r\n        if (res.code === 200) {\r\n          setIsModalVisible(false)\r\n          handleSearch()\r\n        }\r\n      })\r\n    } else if (type === 'edit') {\r\n      values.rules = Array.isArray(values.rules) ? values.rules : [values.rules]\r\n      Api.light\r\n        .fieldsEdit({\r\n          tableId,\r\n          id: initValues.id,\r\n          dataItem: { ...initValues, ...values },\r\n        })\r\n        .then((res) => {\r\n          if (res.code === 200) {\r\n            setIsModalVisible(false)\r\n            handleSearch()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  //校验失败\r\n  const handleFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  //查看\r\n  const handleCheck = (record) => {\r\n    setType('check')\r\n    setInitValues({ ...initValues, ...record })\r\n    setModalTitle('查看字段')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //表单字段值更新时触发回调事件，监控表单组件变化\r\n  const handleValuesChange = (changedValues, allValues) => {\r\n    console.log(changedValues, allValues)\r\n    setFormComponentName(allValues.formComponentName)\r\n  }\r\n\r\n  //挂载完\r\n  useEffect(() => {\r\n    handleSearch()\r\n    // eslint-disable-next-line \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [isModalVisible, form])\r\n\r\n  return {\r\n    dataSource,\r\n    isModalVisible,\r\n    initValues,\r\n    type,\r\n    form,\r\n    applicationTitle,\r\n    modalTitle,\r\n    formComponentName,\r\n    handleSearch,\r\n    handleDelete,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleCheck,\r\n    setIsModalVisible,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n    handleValuesChange,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button, Form } from 'antd'\r\nimport Tool from './Tool'\r\nimport { getColumns, getModalFields } from './config'\r\nimport { MyTableForEasy, Icon } from '../../../../components/light'\r\nimport Header from './Header'\r\nimport useList from './useList'\r\n\r\nfunction Index(props) {\r\n  const {\r\n    dataSource,\r\n    isModalVisible,\r\n    initValues,\r\n    type,\r\n    form,\r\n    applicationTitle,\r\n    modalTitle,\r\n    formComponentName,\r\n    handleSearch,\r\n    handleDelete,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleCheck,\r\n    setIsModalVisible,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n    handleValuesChange,\r\n  } = useList(props)\r\n\r\n\r\n  return (\r\n    <div className=\"m-admin-content\">\r\n      <Header applicationTitle={applicationTitle}></Header>\r\n      <Tool\r\n        onAdd={handleAdd}\r\n      ></Tool>\r\n      <MyTableForEasy\r\n        dataSource={dataSource}\r\n        onSearch={handleSearch}\r\n        onDelete={handleDelete}\r\n        onEdit={handleEdit}\r\n        onCheck={handleCheck}\r\n        getColumns={getColumns}\r\n      ></MyTableForEasy>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={isModalVisible}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        footer={null}\r\n        width={900}\r\n        className=\"m-set-application-modal\"\r\n        forceRender\r\n      >\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 17 }}\r\n          initialValues={{ ...initValues }}\r\n          scrollToFirstError={true}\r\n          onFinish={handleFinish}\r\n          onFinishFailed={handleFinishFailed}\r\n          onValuesChange={handleValuesChange}\r\n          id=\"m-set-application-modal-form\"\r\n          className=\"m-set-application-modal-form\"\r\n        >\r\n          {getModalFields({dataSource, type, initValues, formComponentName})}\r\n          <Form.Item\r\n            wrapperCol={{ offset: 4, span: 17 }}\r\n            className=\"m-modal-footer\"\r\n          >\r\n            {(type === 'add' || type === 'edit') && (\r\n              <>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"m-space\">\r\n                  <Icon name=\"submit\" className=\"m-tool-btn-icon\"></Icon>\r\n                  提交\r\n                </Button>\r\n                <Button\r\n                  className=\"m-space\"\r\n                  onClick={() => {\r\n                    form.resetFields()\r\n                  }}\r\n                >\r\n                  <Icon name=\"reset\" className=\"m-tool-btn-icon\"></Icon>\r\n                  重置\r\n                </Button>\r\n              </>\r\n            )}\r\n            <Button\r\n              className=\"m-space\"\r\n              onClick={() => setIsModalVisible(false)}\r\n            >\r\n              取消\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_LIGHT_STATE', key, value })\r\n    },\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index))\r\n"],"sourceRoot":""}