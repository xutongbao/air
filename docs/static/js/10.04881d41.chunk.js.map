{"version":3,"sources":["components/light/Icon.js","components/light/MyTable.js","components/light/MyTableForEasy.js","components/light/FieldRequired.js","components/light/MyCheckbox.js","views/light/index/content/Tool.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/antd/es/col/index.js","views/light/index/content/config.js","views/light/index/content/useList.js","views/light/index/content/useFields.js","views/light/index/content/useOperate.js","views/light/index/content/Index.js"],"names":["Icon","props","name","className","onClick","MyTable","dataSource","total","current","pageSize","getColumns","columns","rowKey","scroll","scrollToFirstRowOnChange","x","rowSelection","onChange","selectedRowKeys","selectedRows","onRowSelect","pagination","page","onSearch","showSizeChanger","pageSizeOptions","onShowSizeChange","showTotal","MyTableForEasy","FieldRequired","value","useState","required","setRequired","message","setMessage","triggerChange","changedValue","checked","tempMessage","e","target","placeholder","MyCheckbox","children","setChecked","tempChecked","Tool","onAdd","type","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","title","width","render","record","size","danger","onDelete","onCheck","onEdit","confirm","Modal","useList","setTotal","setCurrent","state","setState","Form","useForm","form","isModalVisible","setIsModalVisible","initValues","setInitValues","setType","modalTitle","setModalTitle","modalFields","setModalFields","fields","filter","item","isColumn","map","dataIndex","text","result","getRenderFunArr","find","funItem","renderFunName","getModalFields","isModalField","getFormComponentArr","componentItem","formComponentName","Item","label","rules","component","id","routerSearchObj","getRouterSearchObj","tableId","addInitValues","statePageSize","handleSearch","searchParams","Api","light","tableSearch","then","res","code","data","list","useEffect","console","log","resetFields","handleDelete","onOk","tableDelete","ids","handleAdd","handleEdit","handleCheck","handleFinish","values","tableAdd","dataItem","tableEdit","handleFinishFailed","errorInfo","connect","dispatch","onSetState","key","onDispatch","action","withRouter","handleRowSelect","selectedIds","setSelectedIds","handleOperate","length","warning","useOperate","visible","onCancel","footer","forceRender","labelCol","span","wrapperCol","initialValues","onFinish","onFinishFailed","offset","htmlType"],"mappings":"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","file":"static/js/10.04881d41.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Icon(props) {\r\n  let { name, className } = props\r\n  return (\r\n    <span\r\n      className={`icon iconfont icon-${name} ${className ? className : \"\"}`}\r\n      onClick={props.onClick}\r\n    ></span>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTable(props) {\r\n  const { dataSource, total, current, pageSize, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        rowSelection={{\r\n          onChange: (selectedRowKeys, selectedRows) =>\r\n            props.onRowSelect(selectedRowKeys, selectedRows),\r\n        }}\r\n        pagination={{\r\n          current,\r\n          total,\r\n          pageSize,\r\n          onChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showSizeChanger: true,\r\n          pageSizeOptions: [10, 20, 50],\r\n          onShowSizeChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTable\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTableForEasy(props) {\r\n  const { dataSource, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        pagination={{\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n        //pagination={false}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTableForEasy\r\n","import React, { useState } from 'react'\r\nimport { Checkbox, Input } from 'antd'\r\n\r\nexport default function FieldRequired({ value = {}, onChange }) {\r\n  const [required, setRequired] = useState(false) \r\n  const [message, setMessage] = useState()\r\n\r\n  const triggerChange = (changedValue) => {\r\n    onChange({\r\n      required,\r\n      message,\r\n      ...value,\r\n      ...changedValue,\r\n    });\r\n  };\r\n\r\n\r\n  const handleCheckbox = (e) => {\r\n    setRequired(e.target.checked)\r\n    triggerChange({ required: e.target.checked })\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    setMessage(e.target.value)\r\n    triggerChange({ message: e.target.value })\r\n  }\r\n\r\n  let checked = false\r\n  let tempMessage = ''\r\n  if (typeof value.required === 'boolean') {\r\n    checked = value.required\r\n    tempMessage = value.message\r\n  } else {\r\n    checked = required\r\n    tempMessage = message\r\n  }\r\n  return (\r\n    <div>\r\n      <Checkbox checked={checked} onChange={handleCheckbox}>必填</Checkbox>\r\n      <Input className={`m-fields-required-input ${checked ? 'active' : ''}`} value={tempMessage} onChange={handleInput} placeholder=\"请输入必填提示语\"></Input>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Checkbox } from 'antd'\r\n\r\nexport default function MyCheckbox({ value, onChange, children }) {\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    setChecked(e.target.checked)\r\n    onChange(e.target.checked)\r\n  }\r\n\r\n  let tempChecked = false\r\n  if (typeof value === 'boolean') {\r\n    tempChecked = value\r\n  } else {\r\n    tempChecked = checked\r\n  }\r\n\r\n  return <Checkbox checked={tempChecked} onChange={handleChange}>{children}</Checkbox>\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Icon } from '../../../../components/light'\r\n\r\nfunction Tool(props) {\r\n  const { onAdd } = props\r\n\r\n  return (\r\n    <div className=\"m-content-tool\">\r\n      <div className=\"m-content-tool-row\">\r\n        <Button className=\"m-space\" type=\"primary\" onClick={onAdd}>\r\n          <Icon name=\"add\" className=\"m-tool-btn-icon\"></Icon>\r\n          添加\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tool\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Col } from '../grid';\nexport default Col;","import { Form, Col, Input, Button } from 'antd'\r\nimport {\r\n  Icon\r\n} from '../../../../components/light'\r\n\r\n\r\n//表格列字段\r\nconst getColumns = (props) => {\r\n  return [\r\n    ...props.columns,\r\n    {\r\n      title: '操作',\r\n      width: 220,\r\n      render: (record) => {\r\n        return (\r\n          <div className=\"m-action\">\r\n            <Button\r\n              className=\"m-action-btn\"\r\n              size=\"small\"\r\n              danger\r\n              onClick={() => props.onDelete(record)}\r\n            >\r\n              删除\r\n            </Button>\r\n            <Button\r\n              className=\"m-action-btn\"\r\n              size=\"small\"\r\n              onClick={() => props.onCheck(record)}\r\n            >\r\n              查看\r\n            </Button>\r\n            <Button\r\n              className=\"m-action-btn\"\r\n              size=\"small\"\r\n              onClick={() => props.onEdit(record)}\r\n            >\r\n              编辑\r\n            </Button>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\n//搜索字段\r\nconst getSearchFields = (isExpand) => {\r\n  const expandClassname = `m-table-serach ${isExpand ? 'active' : ''}`\r\n  const span = 6\r\n  return (\r\n    <>\r\n      <Col span={span}>\r\n        <Form.Item name=\"name\" label=\"店铺名称\">\r\n          <Input placeholder=\"名称或ID或百度ID\" />\r\n        </Form.Item>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n\r\n//添加编辑查看对话框表单字段\r\nconst getModalFields = () => {\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        label=\"名称\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入店铺名称！',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport { getColumns, getSearchFields, getModalFields }\r\n","import { useState, useEffect } from 'react'\r\nimport Api from '../../../../api'\r\nimport { Modal, Form } from 'antd'\r\nimport { getRouterSearchObj } from '../../../../utils/tools'\r\nimport useFields from './useFields'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default function useList(props) {\r\n  const [total, setTotal] = useState()\r\n  const [current, setCurrent] = useState(1)\r\n  //把dataSource和pageSize单独放在一起是为了避免切换pageSize时的bug\r\n  const [state, setState] = useState({\r\n    columns: [],\r\n    dataSource: [],\r\n    pageSize: 10,\r\n  })\r\n  const [form] = Form.useForm()\r\n  //控制对话框显示和隐藏\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  //添加表单默认值\r\n  const [initValues, setInitValues] = useState({})\r\n  const [type, setType] = useState('add')\r\n  const [modalTitle, setModalTitle] = useState()\r\n  const [modalFields, setModalFields] = useState([])\r\n  const { getColumns, getModalFields } = useFields(props)\r\n\r\n  //获取路由参数\r\n  const routerSearchObj = getRouterSearchObj(props)\r\n  const tableId = routerSearchObj.id - 0\r\n\r\n  const addInitValues = {}\r\n\r\n  //搜索\r\n  const statePageSize = state.pageSize\r\n  const handleSearch = ({\r\n    page = 1,\r\n    pageSize = statePageSize,\r\n    searchParams = {},\r\n  } = {}) => {\r\n    Api.light.tableSearch({ tableId, page, pageSize, searchParams }).then((res) => {\r\n      if (res.code === 200) {\r\n        setState({\r\n          columns: getColumns(res.data.fields),\r\n          dataSource: res.data.list,\r\n          pageSize: res.data.pageSize,\r\n        })\r\n        setModalFields(getModalFields(res.data.fields))\r\n        setTotal(res.data.total)\r\n        setCurrent(res.data.current)\r\n      }\r\n    })\r\n  }\r\n\r\n  //删除\r\n  const handleDelete = (record) => {\r\n    console.log('删除, id:', record.id)\r\n    confirm({\r\n      title: '确认要删除吗？',\r\n      onOk() {\r\n        Api.light.tableDelete({ tableId, ids: [record.id] }).then((res) => {\r\n          if (res.code === 200) {\r\n            handleSearch()\r\n          }\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  //显示添加对话框\r\n  const handleAdd = () => {\r\n    setType('add')\r\n    setInitValues(addInitValues)\r\n    setModalTitle('添加')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //显示编辑对话框\r\n  const handleEdit = (record) => {\r\n    console.log('编辑, id:', record)\r\n    setType('edit')\r\n    setInitValues({ ...initValues, ...record })\r\n    setModalTitle('编辑')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //添加或编辑\r\n  const handleFinish = (values) => {\r\n    console.log('Success:', values)\r\n    if (type === 'add') {\r\n      Api.light.tableAdd({ tableId, dataItem: values }).then((res) => {\r\n        if (res.code === 200) {\r\n          setIsModalVisible(false)\r\n          handleSearch()\r\n        }\r\n      })\r\n    } else if (type === 'edit') {\r\n      Api.light\r\n        .tableEdit({\r\n          tableId,\r\n          id: initValues.id,\r\n          dataItem: { ...initValues, ...values },\r\n        })\r\n        .then((res) => {\r\n          if (res.code === 200) {\r\n            setIsModalVisible(false)\r\n            handleSearch()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  //校验失败\r\n  const handleFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  //查看\r\n  const handleCheck = (record) => {\r\n    setType('check')\r\n    setInitValues({ ...initValues, ...record })\r\n    setModalTitle('查看')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //挂载完\r\n  useEffect(() => {\r\n    console.log(routerSearchObj.id)\r\n    handleSearch({ page: current, pageSize: state.pageSize })\r\n  }, [routerSearchObj.id])\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [isModalVisible])\r\n\r\n  return {\r\n    dataSource: state.dataSource,\r\n    total,\r\n    current,\r\n    pageSize: state.pageSize,\r\n    columns: state.columns,\r\n    isModalVisible,\r\n    initValues,\r\n    type,\r\n    form,\r\n    modalTitle,\r\n    modalFields,\r\n    handleSearch,\r\n    handleDelete,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleCheck,\r\n    setIsModalVisible,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n  }\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { getFormComponentArr, getRenderFunArr } from '../../../../utils/tools'\r\n\r\nexport default () => {\r\n  //根据fields获取columns\r\n  const getColumns = (fields) => {\r\n    return fields.filter(item => item.isColumn).map((item) => {\r\n      return {\r\n        title: item.title,\r\n        dataIndex: item.dataIndex,\r\n        render: (text, record) => {\r\n          const result = getRenderFunArr().find(\r\n            (funItem) => funItem.renderFunName === item.renderFunName\r\n          )\r\n          return result ? result.render(text, record) : text\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  //根据fields获取对话框字段\r\n  const getModalFields = (fields) => {\r\n    return fields.map((item) => {\r\n      if (item.isModalField) {\r\n        const result = getFormComponentArr().find(\r\n          (componentItem) =>\r\n            componentItem.formComponentName === item.formComponentName\r\n        )\r\n        return (\r\n          <Form.Item\r\n            key={item.id}\r\n            label={item.title}\r\n            name={item.dataIndex}\r\n            rules={item.rules}\r\n          >\r\n            {result ? result.component : <Input></Input>}\r\n          </Form.Item>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    getColumns,\r\n    getModalFields,\r\n  }\r\n}\r\n","import { Modal, message } from 'antd'\r\nimport { useState } from 'react'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default function useOperate() {\r\n\r\n  const [selectedIds, setSelectedIds] = useState([])\r\n\r\n  //行选择\r\n  const handleRowSelect = (selectedRowKeys, selectedRows) => {\r\n    console.log(selectedRowKeys, selectedRows)\r\n    setSelectedIds(selectedRowKeys)\r\n  }\r\n\r\n  //按钮操作\r\n  const handleOperate = ({ type }) => {\r\n    if (selectedIds.length === 0) {\r\n      message.warning('请至少选择一项')\r\n    } else if (type === 0) {\r\n      confirm({\r\n        title: '确认要批量提交百度审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 1) {\r\n      confirm({\r\n        title: '确认批量更新数据到百度吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 2) {\r\n      confirm({\r\n        title: '确认要批量查看审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 3) {\r\n      confirm({\r\n        title: '确认要批量提交百度审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 4) {\r\n      confirm({\r\n        title: '确认更新数据到百度吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 5) {\r\n      confirm({\r\n        title: '确认要查看百度审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 6) {\r\n      confirm({\r\n        title: '确认要批量绑定到店铺吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    handleRowSelect,\r\n    handleOperate,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button, Form } from 'antd'\r\nimport Tool from './Tool'\r\nimport { getColumns, getModalFields } from './config'\r\nimport { MyTable, Icon } from '../../../../components/light'\r\nimport useList from './useList'\r\nimport useOperate from './useOperate'\r\n\r\nfunction Index(props) {\r\n  const {\r\n    dataSource,\r\n    total,\r\n    current,\r\n    pageSize,\r\n    columns,\r\n    isModalVisible,\r\n    initValues,\r\n    type,\r\n    form,\r\n    modalTitle,\r\n    modalFields,\r\n    handleSearch,\r\n    handleDelete,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleCheck,\r\n    setIsModalVisible,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n  } = useList(props)\r\n\r\n  const { handleRowSelect } = useOperate()\r\n\r\n  return (\r\n    <div className=\"m-admin-content\">\r\n      <Tool onAdd={handleAdd}></Tool>\r\n      <MyTable\r\n        dataSource={dataSource}\r\n        total={total}\r\n        current={current}\r\n        pageSize={pageSize}\r\n        columns={columns}\r\n        onSearch={handleSearch}\r\n        onDelete={handleDelete}\r\n        onEdit={handleEdit}\r\n        onCheck={handleCheck}\r\n        onRowSelect={handleRowSelect}\r\n        getColumns={getColumns}\r\n      ></MyTable>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={isModalVisible}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        footer={null}\r\n        forceRender\r\n      >\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 17 }}\r\n          initialValues={{ ...initValues }}\r\n          onFinish={handleFinish}\r\n          onFinishFailed={handleFinishFailed}\r\n        >\r\n          {modalFields}\r\n          <Form.Item\r\n            wrapperCol={{ offset: 4, span: 17 }}\r\n            className=\"m-modal-footer\"\r\n          >\r\n            {(type === 'add' || type === 'edit') && (\r\n              <>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"m-space\">\r\n                  <Icon name=\"submit\" className=\"m-tool-btn-icon\"></Icon>\r\n                  提交\r\n                </Button>\r\n                <Button\r\n                  className=\"m-space\"\r\n                  onClick={() => {\r\n                    form.resetFields()\r\n                  }}\r\n                >\r\n                  <Icon name=\"reset\" className=\"m-tool-btn-icon\"></Icon>\r\n                  重置\r\n                </Button>\r\n              </>\r\n            )}\r\n            <Button\r\n              className=\"m-space\"\r\n              onClick={() => setIsModalVisible(false)}\r\n            >\r\n              取消\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_LIGHT_STATE', key, value })\r\n    },\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index))\r\n"],"sourceRoot":""}