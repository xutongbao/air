{"version":3,"sources":["components/light/Icon.js","components/light/MyTable.js","components/light/MyTableForEasy.js","components/light/FieldRequired.js","components/light/UploadImgLight.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/antd/es/col/index.js","views/light/index/content/Tool.js","views/light/index/content/config.js","views/light/index/content/useList.js","views/light/index/content/useFields.js","views/light/index/content/useOperate.js","views/light/index/content/Index.js"],"names":["Icon","props","name","className","title","onClick","MyTable","dataSource","total","current","pageSize","getColumns","columns","rowKey","scroll","scrollToFirstRowOnChange","x","rowSelection","onChange","selectedRowKeys","selectedRows","onRowSelect","pagination","page","onSearch","showSizeChanger","pageSizeOptions","onShowSizeChange","showTotal","MyTableForEasy","FieldRequired","value","useState","required","setRequired","message","setMessage","triggerChange","changedValue","checked","tempMessage","e","target","placeholder","UploadImgLight","msg","accept","defaultValue","uid","status","url","fileList","push","uploadProps","action","urls","light","testUpload","maxCount","listType","defaultFileList","info","file","success","response","state","temp","getHost","console","log","imgUrl","xhr","responseURL","data","filename","error","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Col","Tool","onAdd","type","width","render","record","size","danger","onDelete","onCheck","onEdit","confirm","Modal","useList","setTotal","setCurrent","setState","Form","useForm","form","isModalVisible","setIsModalVisible","initValues","setInitValues","setType","modalTitle","setModalTitle","modalFields","setModalFields","fields","filter","item","isColumn","map","dataIndex","text","result","getRenderFunArr","find","funItem","renderFunName","getModalFields","forEach","isModalField","getFormComponentArr","componentItem","formComponentName","Item","label","rules","component","id","tableId","getRouterSearchObj","addInitValues","handleSearch","searchParams","Api","tableSearch","then","res","code","list","useEffect","location","search","resetFields","handleDelete","onOk","tableDelete","ids","handleAdd","handleEdit","handleCheck","handleFinish","values","tableAdd","dataItem","tableEdit","handleFinishFailed","errorInfo","connect","dispatch","onSetState","key","onDispatch","withRouter","handleRowSelect","selectedIds","setSelectedIds","handleOperate","length","warning","useOperate","visible","onCancel","footer","forceRender","labelCol","span","wrapperCol","initialValues","onFinish","onFinishFailed","offset","htmlType"],"mappings":"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","file":"static/js/15.2233d5d5.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Icon(props) {\r\n  let { name, className, title } = props\r\n  return (\r\n    <span\r\n      className={`icon iconfont icon-${name} ${className ? className : \"\"}`}\r\n      title={title}\r\n      onClick={props.onClick}\r\n    ></span>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTable(props) {\r\n  const { dataSource, total, current, pageSize, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        rowSelection={{\r\n          onChange: (selectedRowKeys, selectedRows) =>\r\n            props.onRowSelect(selectedRowKeys, selectedRows),\r\n        }}\r\n        pagination={{\r\n          current,\r\n          total,\r\n          pageSize,\r\n          onChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showSizeChanger: true,\r\n          pageSizeOptions: [10, 20, 50],\r\n          onShowSizeChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTable\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTableForEasy(props) {\r\n  const { dataSource, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        pagination={{\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n        //pagination={false}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTableForEasy\r\n","import React, { useState } from 'react'\r\nimport { Checkbox, Input } from 'antd'\r\n\r\nexport default function FieldRequired({ value = {}, onChange }) {\r\n  const [required, setRequired] = useState(false) \r\n  const [message, setMessage] = useState()\r\n\r\n  const triggerChange = (changedValue) => {\r\n    onChange({\r\n      required,\r\n      message,\r\n      ...value,\r\n      ...changedValue,\r\n    });\r\n  };\r\n\r\n\r\n  const handleCheckbox = (e) => {\r\n    setRequired(e.target.checked)\r\n    triggerChange({ required: e.target.checked })\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    setMessage(e.target.value)\r\n    triggerChange({ message: e.target.value })\r\n  }\r\n\r\n  let checked = false\r\n  let tempMessage = ''\r\n  if (value && typeof value.required === 'boolean') {\r\n    checked = value.required\r\n    tempMessage = value.message\r\n  } else {\r\n    checked = required\r\n    tempMessage = message\r\n  }\r\n  return (\r\n    <div>\r\n      <Checkbox checked={checked} onChange={handleCheckbox}>必填</Checkbox>\r\n      <Input className={`m-fields-required-input ${checked ? 'active' : ''}`} value={tempMessage} onChange={handleInput} placeholder=\"请输入必填提示语\"></Input>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, Upload, message } from 'antd'\r\nimport urls from '../../api/urls'\r\nimport { getHost } from '../../utils/tools'\r\n\r\nexport default function UploadImgLight({\r\n  value = '',\r\n  msg,\r\n  onChange,\r\n  accept = '.jpg',\r\n}) {\r\n  const imageUrl = value\r\n  let defaultValue = {\r\n    uid: '-1',\r\n    name: imageUrl,\r\n    status: 'done',\r\n    url: imageUrl,\r\n  }\r\n\r\n  const fileList = []\r\n  if (value) {\r\n    fileList.push(defaultValue)\r\n  }\r\n\r\n  const uploadProps = {\r\n    name: 'file',\r\n    action: urls.light.testUpload,\r\n    maxCount: 1,\r\n    listType: 'picture',\r\n    defaultFileList: [...fileList],\r\n    accept,\r\n    onChange(info) {\r\n      // if (info.file.status !== 'uploading') {\r\n      //   console.log(info.file, info.fileList)\r\n      //   onChange(undefined)\r\n      // }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} 上传成功`)\r\n        if (info.file.response.state === 1) {\r\n          // console.log(info.file.xhr.responseURL)\r\n          const temp = getHost('https://efficacious-tiny-infinity.glitch.me/api/upload')\r\n          console.log(temp)\r\n          const imgUrl = `${getHost(info.file.xhr.responseURL)}/${info.file.response.data.filename}`\r\n          console.log(imgUrl)\r\n          onChange(imgUrl)\r\n        }\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} 上传失败`)\r\n      }\r\n    },\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <Upload {...uploadProps}>\r\n        <Button>上传图片</Button>\r\n        <span className=\"m-upload-text\">{msg}</span>\r\n      </Upload>\r\n    </span>\r\n  )\r\n}\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Col } from '../grid';\nexport default Col;","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Icon } from '../../../../components/light'\r\n\r\nfunction Tool(props) {\r\n  const { onAdd } = props\r\n\r\n  return (\r\n    <div className=\"m-content-tool\">\r\n      <div className=\"m-content-tool-row\">\r\n        <Button className=\"m-space\" type=\"primary\" onClick={onAdd}>\r\n          <Icon name=\"add\" className=\"m-tool-btn-icon\"></Icon>\r\n          添加\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tool\r\n","import { Form, Col, Input, Button } from 'antd'\r\n\r\n//表格列字段\r\nconst getColumns = (props) => {\r\n  return [\r\n    ...props.columns,\r\n    {\r\n      title: '操作',\r\n      width: 220,\r\n      render: (record) => {\r\n        return (\r\n          <div className=\"m-action\">\r\n            <Button\r\n              className=\"m-action-btn\"\r\n              size=\"small\"\r\n              danger\r\n              onClick={() => props.onDelete(record)}\r\n            >\r\n              删除\r\n            </Button>\r\n            <Button\r\n              className=\"m-action-btn\"\r\n              size=\"small\"\r\n              onClick={() => props.onCheck(record)}\r\n            >\r\n              查看\r\n            </Button>\r\n            <Button\r\n              className=\"m-action-btn\"\r\n              size=\"small\"\r\n              onClick={() => props.onEdit(record)}\r\n            >\r\n              编辑\r\n            </Button>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\n//搜索字段\r\nconst getSearchFields = (isExpand) => {\r\n  // eslint-disable-next-line \r\n  const expandClassname = `m-table-serach ${isExpand ? 'active' : ''}`\r\n  const span = 6\r\n  return (\r\n    <>\r\n      <Col span={span}>\r\n        <Form.Item name=\"name\" label=\"店铺名称\">\r\n          <Input placeholder=\"名称或ID或百度ID\" />\r\n        </Form.Item>\r\n      </Col>\r\n    </>\r\n  )\r\n}\r\n\r\n//添加编辑查看对话框表单字段\r\nconst getModalFields = () => {\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        label=\"名称\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入店铺名称！',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport { getColumns, getSearchFields, getModalFields }\r\n","import { useState, useEffect } from 'react'\r\nimport Api from '../../../../api'\r\nimport { Modal, Form } from 'antd'\r\nimport { getRouterSearchObj } from '../../../../utils/tools'\r\nimport useFields from './useFields'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default function useList(props) {\r\n  const [total, setTotal] = useState()\r\n  const [current, setCurrent] = useState(1)\r\n  //把dataSource和pageSize单独放在一起是为了避免切换pageSize时的bug\r\n  const [state, setState] = useState({\r\n    columns: [],\r\n    dataSource: [],\r\n    pageSize: 10,\r\n  })\r\n  const [form] = Form.useForm()\r\n  //控制对话框显示和隐藏\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  //添加表单默认值\r\n  const [initValues, setInitValues] = useState({})\r\n  const [type, setType] = useState('add')\r\n  const [modalTitle, setModalTitle] = useState()\r\n  const [modalFields, setModalFields] = useState([])\r\n  const { getColumns, getModalFields } = useFields(props)\r\n\r\n  //获取路由参数\r\n  const routerSearchObj = getRouterSearchObj(props)\r\n  const tableId = routerSearchObj.id - 0\r\n\r\n  const addInitValues = {}\r\n\r\n  //搜索\r\n  const handleSearch = ({\r\n    page = 1,\r\n    pageSize = state.pageSize,\r\n    searchParams = {},\r\n  } = {}) => {\r\n    Api.light.tableSearch({ tableId, page, pageSize, searchParams }).then((res) => {\r\n      if (res.code === 200) {\r\n        setState({\r\n          columns: getColumns(res.data.fields),\r\n          dataSource: res.data.list,\r\n          pageSize: res.data.pageSize,\r\n        })\r\n        setModalFields(getModalFields(res.data.fields))\r\n        setTotal(res.data.total)\r\n        setCurrent(res.data.current)\r\n      }\r\n    })\r\n  }\r\n\r\n  //删除\r\n  const handleDelete = (record) => {\r\n    console.log('删除, id:', record.id)\r\n    confirm({\r\n      title: '确认要删除吗？',\r\n      onOk() {\r\n        Api.light.tableDelete({ tableId, ids: [record.id] }).then((res) => {\r\n          if (res.code === 200) {\r\n            handleSearch()\r\n          }\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  //显示添加对话框\r\n  const handleAdd = () => {\r\n    setType('add')\r\n    setInitValues(addInitValues)\r\n    setModalTitle('添加')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //显示编辑对话框\r\n  const handleEdit = (record) => {\r\n    console.log('编辑, id:', record)\r\n    setType('edit')\r\n    setInitValues({ ...initValues, ...record })\r\n    setModalTitle('编辑')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //添加或编辑\r\n  const handleFinish = (values) => {\r\n    console.log('Success:', values)\r\n    if (type === 'add') {\r\n      Api.light.tableAdd({ tableId, dataItem: values }).then((res) => {\r\n        if (res.code === 200) {\r\n          setIsModalVisible(false)\r\n          handleSearch()\r\n        }\r\n      })\r\n    } else if (type === 'edit') {\r\n      Api.light\r\n        .tableEdit({\r\n          tableId,\r\n          id: initValues.id,\r\n          dataItem: { ...initValues, ...values },\r\n        })\r\n        .then((res) => {\r\n          if (res.code === 200) {\r\n            setIsModalVisible(false)\r\n            handleSearch()\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  //校验失败\r\n  const handleFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  //查看\r\n  const handleCheck = (record) => {\r\n    setType('check')\r\n    setInitValues({ ...initValues, ...record })\r\n    setModalTitle('查看')\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  //挂载完执行，切换路由时，search会变化，也会执行\r\n  useEffect(() => {\r\n    handleSearch()\r\n    // eslint-disable-next-line \r\n  }, [props.location.search])\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [isModalVisible, form])\r\n\r\n  return {\r\n    dataSource: state.dataSource,\r\n    total,\r\n    current,\r\n    pageSize: state.pageSize,\r\n    columns: state.columns,\r\n    isModalVisible,\r\n    initValues,\r\n    type,\r\n    form,\r\n    modalTitle,\r\n    modalFields,\r\n    handleSearch,\r\n    handleDelete,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleCheck,\r\n    setIsModalVisible,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n  }\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { getFormComponentArr, getRenderFunArr } from '../../../../utils/tools'\r\n\r\nexport default function useFields() {\r\n  //根据fields获取columns\r\n  const getColumns = (fields) => {\r\n    return fields.filter(item => item.isColumn).map((item) => {\r\n      return {\r\n        title: item.title,\r\n        dataIndex: item.dataIndex,\r\n        render: (text, record) => {\r\n          const result = getRenderFunArr().find(\r\n            (funItem) => funItem.renderFunName === item.renderFunName\r\n          )\r\n          return result ? result.render(text, record) : text\r\n        },\r\n      }\r\n    })\r\n  }\r\n\r\n  //根据fields获取对话框字段\r\n  const getModalFields = (fields) => {\r\n    const arr = []\r\n    fields.forEach((item) => {\r\n      if (item.isModalField) {\r\n        const result = getFormComponentArr().find(\r\n          (componentItem) =>\r\n            componentItem.formComponentName === item.formComponentName\r\n        )\r\n        arr.push(\r\n          <Form.Item\r\n            key={item.id}\r\n            label={item.title}\r\n            name={item.dataIndex}\r\n            rules={item.rules}\r\n          >\r\n            {result ? result.component : <Input></Input>}\r\n          </Form.Item>\r\n        )\r\n      }\r\n    })\r\n    return arr\r\n  }\r\n\r\n  return {\r\n    getColumns,\r\n    getModalFields,\r\n  }\r\n}\r\n","import { Modal, message } from 'antd'\r\nimport { useState } from 'react'\r\n\r\nconst { confirm } = Modal\r\n\r\nexport default function useOperate() {\r\n\r\n  const [selectedIds, setSelectedIds] = useState([])\r\n\r\n  //行选择\r\n  const handleRowSelect = (selectedRowKeys, selectedRows) => {\r\n    console.log(selectedRowKeys, selectedRows)\r\n    setSelectedIds(selectedRowKeys)\r\n  }\r\n\r\n  //按钮操作\r\n  const handleOperate = ({ type }) => {\r\n    if (selectedIds.length === 0) {\r\n      message.warning('请至少选择一项')\r\n    } else if (type === 0) {\r\n      confirm({\r\n        title: '确认要批量提交百度审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 1) {\r\n      confirm({\r\n        title: '确认批量更新数据到百度吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 2) {\r\n      confirm({\r\n        title: '确认要批量查看审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 3) {\r\n      confirm({\r\n        title: '确认要批量提交百度审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 4) {\r\n      confirm({\r\n        title: '确认更新数据到百度吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 5) {\r\n      confirm({\r\n        title: '确认要查看百度审核吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    } else if (type === 6) {\r\n      confirm({\r\n        title: '确认要批量绑定到店铺吗?',\r\n        onOk() {\r\n          console.log(selectedIds)\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    handleRowSelect,\r\n    handleOperate,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Modal, Button, Form } from 'antd'\r\nimport Tool from './Tool'\r\nimport { getColumns } from './config'\r\nimport { MyTable, Icon } from '../../../../components/light'\r\nimport useList from './useList'\r\nimport useOperate from './useOperate'\r\n\r\nfunction Index(props) {\r\n  const {\r\n    dataSource,\r\n    total,\r\n    current,\r\n    pageSize,\r\n    columns,\r\n    isModalVisible,\r\n    initValues,\r\n    type,\r\n    form,\r\n    modalTitle,\r\n    modalFields,\r\n    handleSearch,\r\n    handleDelete,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleCheck,\r\n    setIsModalVisible,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n  } = useList(props)\r\n\r\n  const { handleRowSelect } = useOperate()\r\n\r\n  return (\r\n    <div>\r\n      <Tool onAdd={handleAdd}></Tool>\r\n      <MyTable\r\n        dataSource={dataSource}\r\n        total={total}\r\n        current={current}\r\n        pageSize={pageSize}\r\n        columns={columns}\r\n        onSearch={handleSearch}\r\n        onDelete={handleDelete}\r\n        onEdit={handleEdit}\r\n        onCheck={handleCheck}\r\n        onRowSelect={handleRowSelect}\r\n        getColumns={getColumns}\r\n      ></MyTable>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={isModalVisible}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        footer={null}\r\n        className=\"m-index-content-modal\"\r\n        forceRender\r\n      >\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 17 }}\r\n          initialValues={{ ...initValues }}\r\n          onFinish={handleFinish}\r\n          onFinishFailed={handleFinishFailed}\r\n        >\r\n          {modalFields}\r\n          <Form.Item\r\n            wrapperCol={{ offset: 4, span: 17 }}\r\n          >\r\n            {(type === 'add' || type === 'edit') && (\r\n              <>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"m-space\">\r\n                  <Icon name=\"submit\" className=\"m-tool-btn-icon\"></Icon>\r\n                  提交\r\n                </Button>\r\n                <Button\r\n                  className=\"m-space\"\r\n                  onClick={() => {\r\n                    form.resetFields()\r\n                  }}\r\n                >\r\n                  <Icon name=\"reset\" className=\"m-tool-btn-icon\"></Icon>\r\n                  重置\r\n                </Button>\r\n              </>\r\n            )}\r\n            <Button\r\n              className=\"m-space\"\r\n              onClick={() => setIsModalVisible(false)}\r\n            >\r\n              取消\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_LIGHT_STATE', key, value })\r\n    },\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index))\r\n"],"sourceRoot":""}