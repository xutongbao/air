{"version":3,"sources":["utils/tools.js","utils/config.js","components/light/Icon.js","components/light/MyTable.js","components/light/MyTableForEasy.js","components/light/FieldRequired.js","components/light/UploadImgLight.js","api/urls.js","api/lightUrls.js","api/common.js","api/index.js","api/lightApi.js","views/light/formview/useList.js","views/light/formview/useFields.js","views/light/formview/Index.js"],"names":["TextArea","Input","getRouterSearchObj","props","url","params","arr","split","length","i","l","a","parseQueryString","location","search","getHost","result","exec","getFormComponentArr","id","title","formComponentName","component","getComponent","style","width","alt","getRenderFunArr","renderFunName","formComponentNameArr","render","text","moment","format","src","baseURL","Icon","name","className","onClick","MyTable","dataSource","total","current","pageSize","getColumns","columns","rowKey","scroll","scrollToFirstRowOnChange","x","rowSelection","onChange","selectedRowKeys","selectedRows","onRowSelect","pagination","page","onSearch","showSizeChanger","pageSizeOptions","onShowSizeChange","showTotal","MyTableForEasy","FieldRequired","value","useState","required","setRequired","message","setMessage","triggerChange","changedValue","checked","tempMessage","e","target","placeholder","UploadImgLight","msg","accept","defaultValue","uid","status","fileList","push","uploadProps","action","urls","light","testUpload","maxCount","listType","defaultFileList","info","file","success","response","state","temp","console","log","imgUrl","xhr","responseURL","data","filename","error","templateSearch","templateAdd","templateDelete","templateEdit","easyTemplateSearch","easyTemplateAdd","easyTemplateDelete","easyTemplateEdit","routerSearch","routerAdd","routerDelete","routerEdit","tableSearch","tableAdd","tableDelete","tableEdit","fieldsSearch","fieldsAdd","fieldsDelete","fieldsEdit","fieldsEditAll","axios","defaults","interceptors","request","use","config","headers","token","localStorage","getItem","method","err","Promise","reject","res","code","warning","common","Api","useList","Form","useForm","form","modalFields","setModalFields","getModalFields","fields","filter","item","isColumn","map","dataIndex","record","find","funItem","forEach","isModalField","componentItem","type","Item","label","rules","wrapperCol","initValues","isShowResult","setIsShowResult","setTitle","isImageFirst","setIsImageFirst","tableId","handleSearch","then","tempFields","Array","isArray","useEffect","handleFinish","values","dataItem","handleFinishFailed","errorInfo","connect","dispatch","onSetState","key","onDispatch","withRouter","subTitle","labelCol","span","initialValues","onFinish","onFinishFailed","offset","htmlType","resetFields"],"mappings":"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","file":"static/js/12.37e65f1c.chunk.js","sourcesContent":["import store from '../store'\r\nimport { Input, InputNumber } from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input\r\n\r\nlet timer\r\n\r\n//显示loading\r\nconst showLoading = (delay = 0) => {\r\n  timer = setTimeout(() => {\r\n    store.dispatch({\r\n      type: 'SET_LIGHT_STATE',\r\n      key: ['isLoading'],\r\n      value: true,\r\n    })\r\n  }, delay)\r\n}\r\n\r\n//隐藏loading\r\nconst hideLoading = () => {\r\n  clearTimeout(timer)\r\n  store.dispatch({\r\n    type: 'SET_LIGHT_STATE',\r\n    key: ['isLoading'],\r\n    value: false,\r\n  })\r\n}\r\n\r\n//把url里的查询字段转换成对象\r\nconst parseQueryString = (url) => {\r\n  let params = {}\r\n  let arr = url.split('?')\r\n  if (arr.length <= 1) {\r\n    return params\r\n  }\r\n  arr = arr[1].split('&')\r\n  for (let i = 0, l = arr.length; i < l; i++) {\r\n    let a = arr[i].split('=')\r\n    params[a[0]] = a[1]\r\n  }\r\n  return params\r\n}\r\n\r\n//包路由里的查询字段转换成对象\r\nconst getRouterSearchObj = (props) => {\r\n  const {\r\n    location: { search },\r\n  } = props\r\n  const routerSearchObj = parseQueryString(search)\r\n  return routerSearchObj\r\n}\r\n\r\n//获取主机名\r\nconst getHost = (url) => {\r\n  var reg = /http(s)?:\\/\\/([A-Za-z0123456789:.-]+)\\/\\S+/\r\n  var result = reg.exec(url)\r\n  if (result) {\r\n    return 'http://' + result[2]\r\n  }\r\n}\r\n\r\n//获取表单组件\r\nconst getFormComponentArr = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      title: '单行文本',\r\n      formComponentName: 'Input',\r\n      component: <Input></Input>,\r\n      getComponent: ({props}) => {\r\n        return <Input {...props}></Input>\r\n      }\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '多行文本',\r\n      formComponentName: 'TextArea',\r\n      component: <TextArea></TextArea>,\r\n      getComponent: ({props}) => {\r\n        return <TextArea {...props}></TextArea>\r\n      }\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '数字',\r\n      formComponentName: 'InputNumber',\r\n      component: <InputNumber style={{width: '100%'}}></InputNumber>,\r\n      getComponent: ({props}) => {\r\n        return <InputNumber style={{width: '100%'}} {...props}></InputNumber>\r\n      }\r\n    },\r\n    {\r\n      id: 4,\r\n      title: '图片',\r\n      formComponentName: 'Image',\r\n      component: <img style={{width: '100%'}} alt=\"图片\"></img>,\r\n      getComponent: ({props}) => {\r\n        return <img style={{width: '100%'}}  {...props} alt=\"图片\"></img>\r\n      }\r\n    },\r\n  ]\r\n}\r\n\r\n//获取渲染函数\r\nconst getRenderFunArr = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      title: 'span标签',\r\n      renderFunName: 'renderSpan',\r\n      formComponentNameArr: ['Input', 'TextArea'],\r\n      render: (text) => {\r\n        return <span>{text}</span>\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '日期',\r\n      renderFunName: 'renderDatetime',\r\n      formComponentNameArr: [],\r\n      render: (text) => {\r\n        return <span>{text ? moment(text).format('YYYY-MM-DD HH:mm:ss') : ''}</span>\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '图片',\r\n      renderFunName: 'renderImage',\r\n      formComponentNameArr: ['Image'],\r\n      render: (text) => {\r\n        return <img alt=\"图片\" src={text}></img>\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\nexport {\r\n  showLoading,\r\n  hideLoading,\r\n  parseQueryString,\r\n  getRouterSearchObj,\r\n  getHost,\r\n  getFormComponentArr,\r\n  getRenderFunArr,\r\n}\r\n","let baseURL = 'http://localhost:81'\r\nif (process.env.NODE_ENV === 'development') {\r\n  baseURL = 'http://localhost:81' //\"http://localhost:81\"\r\n} else {\r\n  //baseURL = 'https://efficacious-tiny-infinity.glitch.me'\r\n  baseURL = 'http://39.97.238.175:81'\r\n}\r\n\r\nexport { baseURL }","import React from \"react\"\r\n\r\nexport default function Icon(props) {\r\n  let { name, className, title } = props\r\n  return (\r\n    <span\r\n      className={`icon iconfont icon-${name} ${className ? className : \"\"}`}\r\n      title={title}\r\n      onClick={props.onClick}\r\n    ></span>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTable(props) {\r\n  const { dataSource, total, current, pageSize, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        rowSelection={{\r\n          onChange: (selectedRowKeys, selectedRows) =>\r\n            props.onRowSelect(selectedRowKeys, selectedRows),\r\n        }}\r\n        pagination={{\r\n          current,\r\n          total,\r\n          pageSize,\r\n          onChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showSizeChanger: true,\r\n          pageSizeOptions: [10, 20, 50],\r\n          onShowSizeChange: (page, pageSize) => props.onSearch({page, pageSize}),\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTable\r\n","import React from 'react'\r\nimport { Table } from 'antd'\r\n\r\nfunction MyTableForEasy(props) {\r\n  const { dataSource, getColumns } = props\r\n\r\n  return (\r\n    <div className=\"m-content-table\">\r\n      <Table\r\n        className=\"m-my-table\"\r\n        columns={getColumns(props)}\r\n        dataSource={dataSource}\r\n        rowKey=\"id\"\r\n        scroll={{ scrollToFirstRowOnChange: true, x: true }}\r\n        pagination={{\r\n          showTotal: (total) => <span>共有数据： <span className=\"m-total-text\">{total}</span> 条</span>,\r\n        }}\r\n        //pagination={false}\r\n      ></Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyTableForEasy\r\n","import React, { useState } from 'react'\r\nimport { Checkbox, Input } from 'antd'\r\n\r\nexport default function FieldRequired({ value = {}, onChange }) {\r\n  const [required, setRequired] = useState(false) \r\n  const [message, setMessage] = useState()\r\n\r\n  const triggerChange = (changedValue) => {\r\n    onChange({\r\n      required,\r\n      message,\r\n      ...value,\r\n      ...changedValue,\r\n    });\r\n  };\r\n\r\n\r\n  const handleCheckbox = (e) => {\r\n    setRequired(e.target.checked)\r\n    triggerChange({ required: e.target.checked })\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    setMessage(e.target.value)\r\n    triggerChange({ message: e.target.value })\r\n  }\r\n\r\n  let checked = false\r\n  let tempMessage = ''\r\n  if (value && typeof value.required === 'boolean') {\r\n    checked = value.required\r\n    tempMessage = value.message\r\n  } else {\r\n    checked = required\r\n    tempMessage = message\r\n  }\r\n  return (\r\n    <div>\r\n      <Checkbox checked={checked} onChange={handleCheckbox}>必填</Checkbox>\r\n      <Input className={`m-fields-required-input ${checked ? 'active' : ''}`} value={tempMessage} onChange={handleInput} placeholder=\"请输入必填提示语\"></Input>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, Upload, message } from 'antd'\r\nimport urls from '../../api/urls'\r\nimport { getHost } from '../../utils/tools'\r\n\r\nexport default function UploadImgLight({\r\n  value = '',\r\n  msg,\r\n  onChange,\r\n  accept = '.jpg',\r\n}) {\r\n  const imageUrl = value\r\n  let defaultValue = {\r\n    uid: '-1',\r\n    name: imageUrl,\r\n    status: 'done',\r\n    url: imageUrl,\r\n  }\r\n\r\n  const fileList = []\r\n  if (value) {\r\n    fileList.push(defaultValue)\r\n  }\r\n\r\n  const uploadProps = {\r\n    name: 'file',\r\n    action: urls.light.testUpload,\r\n    maxCount: 1,\r\n    listType: 'picture',\r\n    defaultFileList: [...fileList],\r\n    accept,\r\n    onChange(info) {\r\n      // if (info.file.status !== 'uploading') {\r\n      //   console.log(info.file, info.fileList)\r\n      //   onChange(undefined)\r\n      // }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} 上传成功`)\r\n        if (info.file.response.state === 1) {\r\n          // console.log(info.file.xhr.responseURL)\r\n          const temp = getHost('https://efficacious-tiny-infinity.glitch.me/api/upload')\r\n          console.log(temp)\r\n          const imgUrl = `${getHost(info.file.xhr.responseURL)}/${info.file.response.data.filename}`\r\n          console.log(imgUrl)\r\n          onChange(imgUrl)\r\n        }\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} 上传失败`)\r\n      }\r\n    },\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <Upload {...uploadProps}>\r\n        <Button>上传图片</Button>\r\n        <span className=\"m-upload-text\">{msg}</span>\r\n      </Upload>\r\n    </span>\r\n  )\r\n}\r\n","import light from \"./lightUrls\"\r\n\r\nconst urls = {\r\n  light,\r\n}\r\n\r\nexport default urls\r\n","import { baseURL } from '../utils/config'\r\n\r\nconst urls = {\r\n  testUpload: baseURL + '/api/upload', //不是axios发起的请求，需要特殊处\r\n\r\n  templateSearch: '/api/template/search',\r\n  templateAdd: '/api/template/add',\r\n  templateDelete: '/api/template/delete',\r\n  templateEdit: '/api/template/edit',\r\n  easyTemplateSearch: '/api/easyTemplate/search',\r\n  easyTemplateAdd: '/api/easyTemplate/add',\r\n  easyTemplateDelete: '/api/easyTemplate/delete',\r\n  easyTemplateEdit: '/api/easyTemplate/edit',  \r\n  routerSearch: '/api/router/search',\r\n  routerAdd: '/api/router/add',\r\n  routerDelete: '/api/router/delete',\r\n  routerEdit: '/api/router/edit',\r\n  tableSearch: '/api/table/search',\r\n  tableAdd: '/api/table/add',\r\n  tableDelete: '/api/table/delete',\r\n  tableEdit: '/api/table/edit',\r\n  fieldsSearch: '/api/fields/search',\r\n  fieldsAdd: '/api/fields/add',\r\n  fieldsDelete: '/api/fields/delete',\r\n  fieldsEdit: '/api/fields/edit',\r\n  fieldsEditAll: '/api/fields/editAll',\r\n}\r\n\r\nexport default urls","import axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { baseURL  } from '../utils/config'\r\n\r\naxios.defaults.baseURL = baseURL\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    config.headers.token = localStorage.getItem('token') || ''\r\n\r\n    // if (config.isNeedExtraData !== false) {\r\n    //   let extraData = { userId: 1 }\r\n    //   if (config.method === \"get\") {\r\n    //     config.params = { ...extraData, ...config.data }\r\n    //   } else {\r\n    //     config.data = { ...extraData, ...config.data }\r\n    //   }\r\n    // }\r\n    if (config.method === 'get') {\r\n      config.params = { ...config.data }\r\n    } else {\r\n      config.data = { ...config.data }\r\n    }\r\n    return config\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\naxios.interceptors.response.use((res) => {\r\n  if (res.data.code === 200) {\r\n    return res.data\r\n  } else if (res.data.code === 400) {\r\n    message.warning(res.data.message)\r\n    return res.data\r\n  } else {\r\n    return Promise.reject(res)\r\n  }\r\n})\r\n\r\nexport const common = async (config) => {\r\n  let res = await axios(config)\r\n  return res\r\n}\r\n","import light from './lightApi'\r\n\r\nconst Api = {\r\n  light\r\n}\r\n\r\nexport default Api\r\n\r\n\r\n\r\n","import urls from './urls'\r\nimport { common } from './common'\r\n\r\nconst Api = {\r\n  templateSearch: (data) => common({ url: urls.light.templateSearch, data, method: 'post' }),\r\n  templateAdd: (data) => common({ url: urls.light.templateAdd, data, method: 'post' }),\r\n  templateDelete: (data) => common({ url: urls.light.templateDelete, data, method: 'post' }),\r\n  templateEdit: (data) => common({ url: urls.light.templateEdit, data, method: 'post' }),\r\n  easyTemplateSearch: (data) => common({ url: urls.light.easyTemplateSearch, data, method: 'post' }),\r\n  easyTemplateAdd: (data) => common({ url: urls.light.easyTemplateAdd, data, method: 'post' }),\r\n  easyTemplateDelete: (data) => common({ url: urls.light.easyTemplateDelete, data, method: 'post' }),\r\n  easyTemplateEdit: (data) => common({ url: urls.light.easyTemplateEdit, data, method: 'post' }),\r\n  routerSearch: (data) => common({ url: urls.light.routerSearch, data, method: 'post' }),\r\n  routerAdd: (data) => common({ url: urls.light.routerAdd, data, method: 'post' }),\r\n  routerDelete: (data) => common({ url: urls.light.routerDelete, data, method: 'post' }),\r\n  routerEdit: (data) => common({ url: urls.light.routerEdit, data, method: 'post' }),\r\n  tableSearch: (data) => common({ url: urls.light.tableSearch, data, method: 'post' }),\r\n  tableAdd: (data) => common({ url: urls.light.tableAdd, data, method: 'post' }),\r\n  tableDelete: (data) => common({ url: urls.light.tableDelete, data, method: 'post' }),\r\n  tableEdit: (data) => common({ url: urls.light.tableEdit, data, method: 'post' }),\r\n  fieldsSearch: (data) => common({ url: urls.light.fieldsSearch, data, method: 'post' }),\r\n  fieldsAdd: (data) => common({ url: urls.light.fieldsAdd, data, method: 'post' }),\r\n  fieldsDelete: (data) => common({ url: urls.light.fieldsDelete, data, method: 'post' }),\r\n  fieldsEdit: (data) => common({ url: urls.light.fieldsEdit, data, method: 'post' }),\r\n  fieldsEditAll: (data) => common({ url: urls.light.fieldsEditAll, data, method: 'post' }),\r\n}\r\n\r\nexport default Api","import { useState, useEffect } from 'react'\r\nimport Api from '../../../api'\r\nimport { Form } from 'antd'\r\nimport { getRouterSearchObj } from '../../../utils/tools'\r\nimport useFields from './useFields'\r\n\r\n\r\nexport default function useList(props) {\r\n  const [form] = Form.useForm()\r\n  const [modalFields, setModalFields] = useState([])\r\n  const { getModalFields } = useFields(props)\r\n  // eslint-disable-next-line\r\n  const [initValues, setInitValues] = useState({})\r\n  const [isShowResult, setIsShowResult] = useState(false)\r\n  const [title, setTitle] = useState('')\r\n  const [isImageFirst, setIsImageFirst] = useState(false)\r\n\r\n\r\n  //获取路由参数\r\n  const routerSearchObj = getRouterSearchObj(props)\r\n  const tableId = routerSearchObj.id\r\n\r\n  //搜索\r\n  const handleSearch = () => {\r\n    Api.light\r\n      .fieldsSearch({ tableId })\r\n      .then((res) => {\r\n        if (res.code === 200) {\r\n          const fields = res.data.fields\r\n          setModalFields(getModalFields(res.data.fields))\r\n          setTitle(res.data.title)\r\n          const tempFields = fields.filter(item => item.isModalField)\r\n          if (Array.isArray(tempFields) && tempFields.length > 0) {\r\n            if (tempFields[0].type === 'image') {\r\n              setIsImageFirst(true)\r\n            }\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  //添加或编辑\r\n  const handleFinish = (values) => {\r\n    console.log('Success:', values)\r\n    Api.light.tableAdd({ tableId, dataItem: values }).then((res) => {\r\n      if (res.code === 200) {\r\n        setIsShowResult(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  //校验失败\r\n  const handleFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  //挂载完执行，切换路由时，search会变化，也会执行\r\n  useEffect(() => {\r\n    handleSearch()\r\n    // eslint-disable-next-line\r\n  }, [props.location.search])\r\n\r\n  return {\r\n    form,\r\n    initValues,\r\n    modalFields,\r\n    isShowResult,\r\n    title,\r\n    isImageFirst,\r\n    handleSearch,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n  }\r\n}\r\n","import { Form, Input } from 'antd'\r\nimport { getFormComponentArr, getRenderFunArr } from '../../../utils/tools'\r\n\r\nexport default function useFields() {\r\n  //根据fields获取columns\r\n  const getColumns = (fields) => {\r\n    return fields\r\n      .filter((item) => item.isColumn)\r\n      .map((item) => {\r\n        return {\r\n          title: item.title,\r\n          dataIndex: item.dataIndex,\r\n          render: (text, record) => {\r\n            const result = getRenderFunArr().find(\r\n              (funItem) => funItem.renderFunName === item.renderFunName\r\n            )\r\n            return result ? result.render(text, record) : text\r\n          },\r\n        }\r\n      })\r\n  }\r\n\r\n  //根据fields获取对话框字段\r\n  const getModalFields = (fields) => {\r\n    const arr = []\r\n    fields.forEach((item) => {\r\n      if (item.isModalField) {\r\n        const result = getFormComponentArr().find(\r\n          (componentItem) =>\r\n            componentItem.formComponentName === item.formComponentName\r\n        )\r\n        if (item.type === 'formItem') {\r\n          arr.push(\r\n            <Form.Item\r\n              key={item.id}\r\n              label={item.title}\r\n              name={item.dataIndex}\r\n              rules={item.rules}\r\n              className=\"m-formview-formitem\"\r\n            >\r\n              {result ? (\r\n                result.getComponent({ props: item.props })\r\n              ) : (\r\n                <Input></Input>\r\n              )}\r\n            </Form.Item>\r\n          )\r\n        } else if (item.type === 'image') {\r\n          arr.push(\r\n            <Form.Item key={item.id} name={item.dataIndex} wrapperCol={24}>\r\n              {result ? (\r\n                result.getComponent({\r\n                  props: {\r\n                    src: item.src,\r\n                  },\r\n                })\r\n              ) : (\r\n                <Input></Input>\r\n              )}\r\n            </Form.Item>\r\n          )\r\n        }\r\n      }\r\n    })\r\n    return arr\r\n  }\r\n\r\n  return {\r\n    getColumns,\r\n    getModalFields,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Button, Form, Result } from 'antd'\r\nimport { Icon } from '../../../components/light'\r\nimport useList from './useList'\r\n\r\nfunction Index(props) {\r\n  const {\r\n    initValues,\r\n    form,\r\n    modalFields,\r\n    isShowResult,\r\n    title,\r\n    isImageFirst,\r\n    handleFinish,\r\n    handleFinishFailed,\r\n  } = useList(props)\r\n\r\n  return (\r\n    <div className=\"m-formview-wrap\">\r\n      <div className=\"m-formview-inner\">\r\n        <div className=\"m-formview-color-header\"></div>\r\n        {isShowResult ? (\r\n          <Result\r\n            status=\"success\"\r\n            title=\"提交成功\"\r\n            subTitle=\"感谢您的参与\"\r\n          ></Result>\r\n        ) : (\r\n          <>\r\n            <div className={`m-formview-header ${isImageFirst ? 'image-first' : ''}`}>{title}</div>\r\n            <Form\r\n              form={form}\r\n              labelCol={{ span: 4 }}\r\n              wrapperCol={{ span: 17 }}\r\n              initialValues={{ ...initValues }}\r\n              onFinish={handleFinish}\r\n              onFinishFailed={handleFinishFailed}\r\n            >\r\n              {modalFields}\r\n              <Form.Item wrapperCol={{ offset: 4, span: 17 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"m-space\">\r\n                  <Icon name=\"submit\" className=\"m-tool-btn-icon\"></Icon>\r\n                  提交\r\n                </Button>\r\n                <Button\r\n                  className=\"m-space\"\r\n                  onClick={() => {\r\n                    form.resetFields()\r\n                  }}\r\n                >\r\n                  <Icon name=\"reset\" className=\"m-tool-btn-icon\"></Icon>\r\n                  重置\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetState(key, value) {\r\n      dispatch({ type: 'SET_LIGHT_STATE', key, value })\r\n    },\r\n    onDispatch(action) {\r\n      dispatch(action)\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Index))\r\n"],"sourceRoot":""}